// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DeployedBridge extends ethereum.Event {
  get params(): DeployedBridge__Params {
    return new DeployedBridge__Params(this);
  }
}

export class DeployedBridge__Params {
  _event: DeployedBridge;

  constructor(event: DeployedBridge) {
    this._event = event;
  }

  get projectId(): string {
    return this._event.parameters[0].value.toString();
  }

  get contractBridge(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get deployerAccount(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get monitorAccount(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get contractBridgeOrigin(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get contractToken(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get deployedFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class DepositToken extends ethereum.Event {
  get params(): DepositToken__Params {
    return new DepositToken__Params(this);
  }
}

export class DepositToken__Params {
  _event: DepositToken;

  constructor(event: DepositToken) {
    this._event = event;
  }

  get contractBridge(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get toBlockchain(): string {
    return this._event.parameters[2].value.toString();
  }

  get toAddress(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  checkUnique(param0: Address, param1: string): boolean {
    let result = super.call(
      "checkUnique",
      "checkUnique(address,string):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromString(param1)]
    );

    return result[0].toBoolean();
  }

  try_checkUnique(
    param0: Address,
    param1: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkUnique",
      "checkUnique(address,string):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromString(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  deployFee(): BigInt {
    let result = super.call("deployFee", "deployFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_deployFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("deployFee", "deployFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  listBridge(param0: Address): boolean {
    let result = super.call("listBridge", "listBridge(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_listBridge(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("listBridge", "listBridge(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectWallet(): Address {
    let result = super.call("projectWallet", "projectWallet():(address)", []);

    return result[0].toAddress();
  }

  try_projectWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "projectWallet",
      "projectWallet():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get contractOrigin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get valueFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployedBridgeCall extends ethereum.Call {
  get inputs(): DeployedBridgeCall__Inputs {
    return new DeployedBridgeCall__Inputs(this);
  }

  get outputs(): DeployedBridgeCall__Outputs {
    return new DeployedBridgeCall__Outputs(this);
  }
}

export class DeployedBridgeCall__Inputs {
  _call: DeployedBridgeCall;

  constructor(call: DeployedBridgeCall) {
    this._call = call;
  }

  get contractOrigin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get monitorAccount(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get projectId(): string {
    return this._call.inputValues[3].value.toString();
  }

  get feeNative(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get feePercentBridge(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class DeployedBridgeCall__Outputs {
  _call: DeployedBridgeCall;

  constructor(call: DeployedBridgeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDeployFeeCall extends ethereum.Call {
  get inputs(): SetDeployFeeCall__Inputs {
    return new SetDeployFeeCall__Inputs(this);
  }

  get outputs(): SetDeployFeeCall__Outputs {
    return new SetDeployFeeCall__Outputs(this);
  }
}

export class SetDeployFeeCall__Inputs {
  _call: SetDeployFeeCall;

  constructor(call: SetDeployFeeCall) {
    this._call = call;
  }

  get fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDeployFeeCall__Outputs {
  _call: SetDeployFeeCall;

  constructor(call: SetDeployFeeCall) {
    this._call = call;
  }
}

export class SetListBridgeCall extends ethereum.Call {
  get inputs(): SetListBridgeCall__Inputs {
    return new SetListBridgeCall__Inputs(this);
  }

  get outputs(): SetListBridgeCall__Outputs {
    return new SetListBridgeCall__Outputs(this);
  }
}

export class SetListBridgeCall__Inputs {
  _call: SetListBridgeCall;

  constructor(call: SetListBridgeCall) {
    this._call = call;
  }

  get contractOrigin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get active(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetListBridgeCall__Outputs {
  _call: SetListBridgeCall;

  constructor(call: SetListBridgeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
